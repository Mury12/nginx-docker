upstream my_service {
    server localhost:3666;
}
upstream portainer {
    server localhost:9000
}

server {
    server_name _;
    root /var/www/example.com;
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    index index.html;

    location ~ /ws {
        proxy_pass http://my_service;
    }

    location ^~ /_/portainer/ {
        rewrite /portainer(.*) $1 break;
        proxy_pass http://portainer
        proxy_hide_header X-Frame-Options; # Possibly nott needed after Portainer 1.20.0
    }

    location ^~ /_/portainer/api/websocket/ {
        rewrite /portainer(.*) $1 break;
        proxy_pass http://portainer;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_hide_header X-Frame-Options; # Possibly nott needed after Portainer 1.20.0
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

 server {
     if ($host = example.com) {
         return 301 https://$host$request_uri;
         } # managed by Certbot
         server_name  example.com;
         listen 80;
         listen [::]:80;
         return 404; # managed by Certbot
     }
